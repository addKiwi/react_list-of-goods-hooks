{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","goods","setGoods","isVisible","setIsVisible","sort","by","newGoods","goodA","goodB","localeCompare","length","className","type","onClick","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAUMC,EAAO,SAACC,GACZ,IAAMC,EAAQ,YAAON,GAerB,OAbAM,EAASF,MAAK,SAACG,EAAOC,GACpB,OAAQH,GACN,IAAK,OACH,OAAOE,EAAME,cAAcD,GAE7B,IAAK,MACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAINT,EAASK,IAOlB,OACE,sBAAKK,UAAU,MAAf,UACE,+CACGT,EAUC,qCACE,wBACEU,KAAK,SACLC,QA3CQ,WAClBZ,EAAS,YAAID,GAAOc,YAwCZ,qBAMA,wBACEF,KAAK,SACLC,QAAS,kBAAMT,EAAK,SAFtB,iCAMA,wBACEQ,KAAK,SACLC,QAAS,kBAAMT,EAAK,QAFtB,4BAMA,wBACEQ,KAAK,SACLC,QAtCE,WACZZ,EAASJ,IAmCD,mBAMA,6BACGG,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAEEL,UAAU,OAFZ,SAIGK,GAHIA,WApCb,wBACEJ,KAAK,SACLC,QAtCO,WACfV,GAAcD,IAmCR,uBCrDVe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c722becd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const showList = () => {\n    setIsVisible(!isVisible);\n  };\n\n  const sortReverse = () => {\n    setGoods([...goods].reverse());\n  };\n\n  const sort = (by: string) => {\n    const newGoods = [...goods];\n\n    newGoods.sort((goodA, goodB) => {\n      switch (by) {\n        case 'alph':\n          return goodA.localeCompare(goodB);\n\n        case 'len':\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    return setGoods(newGoods);\n  };\n\n  const reset = () => {\n    setGoods(goodsFromServer);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>List of Goods</h1>\n      { !isVisible\n        ? (\n          <button\n            type=\"button\"\n            onClick={showList}\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <button\n              type=\"button\"\n              onClick={sortReverse}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => sort('alph')}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => sort('len')}\n            >\n              Sort by Length\n            </button>\n            <button\n              type=\"button\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n            <ul>\n              {goods.map(good => (\n                <li\n                  key={good}\n                  className=\"list\"\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}